{"version":3,"sources":["components/Form.js","components/Numbers.js","components/Search.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Forms","handleSubmit","nameInputController","numberInputController","newName","newNumber","value","onChange","onClick","type","Person","persons","handleDelete","name","number","Numbers","filtered","filteredInput","map","eachPerson","Search","filterController","Notification","successMessage","failMessage","succesful","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","url","personService","getAll","axios","get","then","response","data","createPerson","newPerson","post","deletePerson","person","delete","id","updatePerson","put","App","useState","setPersons","setNewName","setNewNumber","setFilteredInput","setFiltered","setSuccessMessage","setFailMessage","useEffect","initialPersons","removeNotification","setTimeout","event","target","filteredPersons","filter","toLowerCase","includes","Form","preventDefault","i","window","confirm","catch","err","length","createdUser","concat","personToBeDeleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82b8e36e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Forms = ({\r\n    handleSubmit,\r\n    nameInputController,\r\n    numberInputController,\r\n    newName,\r\n    newNumber,\r\n}) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                <h2>add a new</h2>\r\n                <p>\r\n                    name:\r\n                    <input value={newName} onChange={nameInputController} />\r\n                </p>\r\n                <p>\r\n                    number:\r\n                    <input value={newNumber} onChange={numberInputController} />\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <button onClick={handleSubmit} type=\"submit\">\r\n                    add\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Forms;\r\n","import React from \"react\";\r\n\r\nconst Numbers = ({ persons, filtered, filteredInput, handleDelete }) => {\r\n    if (filteredInput) {\r\n        return (\r\n            <div>\r\n                <h2>Numbers</h2>\r\n                {filtered.map((eachPerson) => (\r\n                    <Person\r\n                        key={eachPerson.name}\r\n                        persons={eachPerson}\r\n                        handleDelete={() => handleDelete(eachPerson)}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Numbers</h2>\r\n            {persons.map((eachPerson) => (\r\n                <Person\r\n                    key={eachPerson.name}\r\n                    persons={eachPerson}\r\n                    handleDelete={() => handleDelete(eachPerson)}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Person = ({ persons, handleDelete }) => {\r\n    return (\r\n        <div>\r\n            <p>\r\n                {persons.name} {persons.number}{\" \"}\r\n                <button onClick={handleDelete}>delete</button>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ persons, filterController }) => {\r\n    return (\r\n        <div>\r\n            <p>\r\n                filter shown with <input onChange={filterController} />\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ successMessage, failMessage }) => {\r\n    const succesful = {\r\n        color: successMessage ? \"green\" : \"red\",\r\n        background: \"lightgrey\",\r\n        fontSize: 20,\r\n        borderStyle: \"solid\",\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    };\r\n    if (failMessage) {\r\n        return <div style={succesful}>{failMessage}</div>;\r\n    }\r\n    if (successMessage) {\r\n        return <div style={succesful}>{successMessage}</div>;\r\n    }\r\n\r\n    return <></>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(url);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst createPerson = (newPerson) => {\r\n    const request = axios.post(url, newPerson);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (person) => {\r\n    return axios.delete(url + \"/\" + person.id, person);\r\n};\r\n\r\nconst updatePerson = (person) => {\r\n    const request = axios.put(url + \"/\" + person.id, person);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst personService = { getAll, createPerson, deletePerson, updatePerson };\r\n\r\nexport default personService;\r\n","import React, { useEffect, useState } from \"react\";\nimport Form from \"./components/Form\";\nimport Numbers from \"./components/Numbers\";\nimport Search from \"./components/Search\";\nimport Notification from \"./components/Notification\";\nimport personService from \"./services/persons\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n    const [filteredInput, setFilteredInput] = useState(\"\");\n    const [filtered, setFiltered] = useState([]);\n    const [successMessage, setSuccessMessage] = useState(\"\");\n    const [failMessage, setFailMessage] = useState(\"\");\n\n    useEffect(() => {\n        //set initial persons from json-server db.json (backend)\n        personService.getAll().then((initialPersons) => {\n            setPersons(initialPersons);\n        });\n    }, []);\n\n    const nameInputController = (event) => {\n        //name controlled input\n        setNewName(event.target.value);\n    };\n\n    const numberInputController = (event) => {\n        // number controlled input\n        setNewNumber(event.target.value);\n    };\n\n    const filterController = (event) => {\n        //filters people in the phonebook, than change filtered state,\n        //that will be rendered instead of \"persons\" state\n        setFilteredInput(event.target.value);\n        const filteredPersons = persons.filter(\n            (eachPerson) =>\n                eachPerson.name\n                    .toLowerCase()\n                    .includes(event.target.value.toLowerCase()) ||\n                eachPerson.number.includes(event.target.value)\n        );\n        setFiltered(filteredPersons);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        for (let i = 0; i < persons.length; i++) {\n            //logic to the case when the user tries to add a person that already is in the phonebook\n            if (persons[i].name === newName) {\n                if (\n                    window.confirm(\n                        `${newName} is already added to the phonebook. Do you want to replace the old number with this new one?`\n                    )\n                ) {\n                    //send put request and then change state\n                    personService\n                        .updatePerson({\n                            ...persons[i],\n                            number: newNumber,\n                        })\n                        .then((response) => {\n                            //change state after resolving promise\n                            setPersons(\n                                persons.map((eachPerson) => {\n                                    return eachPerson.id !== persons[i].id\n                                        ? eachPerson\n                                        : response;\n                                })\n                            );\n                            setSuccessMessage(`Changed ${newName}'s number`);\n                            removeNotification();\n                            setNewName(\"\");\n                            setNewNumber(\"\");\n                        })\n                        .catch((err) => {\n                            //error handling\n                            setFailMessage(\n                                `Information of ${newName} has already been removed from the server.`\n                            );\n                            removeNotification();\n                        });\n                }\n                return;\n            }\n        }\n        //logic to add a new person: only happens if it is a new person name\n        const newPerson = { name: newName, number: newNumber };\n        personService\n            .createPerson(newPerson)\n            .then((createdUser) => setPersons(persons.concat([createdUser])));\n        setSuccessMessage(`Added ${newName}`);\n        removeNotification();\n        setNewName(\"\");\n        setNewNumber(\"\");\n    };\n\n    const handleDelete = (personToBeDeleted) => {\n        //logic to delete a contact number\n        if (\n            window.confirm(\n                `Are you sure you want to delete ${personToBeDeleted.name}'s contact?`\n            )\n        ) {\n            personService.deletePerson(personToBeDeleted);\n            setPersons(\n                persons.filter((eachPerson) => eachPerson !== personToBeDeleted)\n            );\n            setSuccessMessage(`Deleted ${personToBeDeleted.name}`);\n            removeNotification();\n        }\n    };\n\n    const removeNotification = () => {\n        //settimeout function to keep the code dry\n        return setTimeout(() => {\n            setSuccessMessage(null);\n            setFailMessage(null);\n        }, 3000);\n    };\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification\n                successMessage={successMessage}\n                failMessage={failMessage}\n            />\n            <Search filterController={filterController} />\n            <Form\n                handleSubmit={handleSubmit}\n                nameInputController={nameInputController}\n                numberInputController={numberInputController}\n                newName={newName}\n                newNumber={newNumber}\n            />\n            <Numbers\n                persons={persons}\n                filtered={filtered}\n                filteredInput={filteredInput}\n                handleDelete={handleDelete}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}